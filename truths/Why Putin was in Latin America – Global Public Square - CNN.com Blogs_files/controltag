var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");


/* Controltag Loader for Turner */
(function(){
  function debugLog(msg) {
    var isDebug = /kxdebug=(1|true)/.test(location);
    if (isDebug && typeof window.console === 'object' && typeof console.info === 'function') {
      console.info(msg);
    }
  }

  function loadCT(url, callback) {
    debugLog('Loading Krux control tag.');
    var ct_element = document.createElement('script');
    ct_element.async = true;
    ct_element.src = url;

    ct_element.onload = ct_element.onreadystatechange = function() {
      var state = ct_element.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        callback.done = true;
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(ct_element, sibling);
  };

  function loadConfig() {
    
    
    debugLog('Loading krux configuration.');

    var config = {"partner_segment_map": {}, "context_terms": [], "tags": [{"content": "<script>\r\n(function(){\r\n  if (window.Krux) {\r\n    var kuid = window.Krux('get', 'user');\r\n    if (kuid && typeof kuid != 'undefined') {\r\n       var rubicon_url = '//web.archive.org/web/20141023210838/http://tap.rubiconproject.com/oz/feeds/krux/tokens?afu=' + kuid;\r\n       var i = new Image();\r\n       i.src = rubicon_url;\r\n\r\n      var ki = new Image();\r\n      ki.src = '//web.archive.org/web/20141023210838/http://beacon.krxd.net/usermatch.gif?partner=rubicon&kuid=' + kuid;\r\n    }\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 3, "timing": "asap", "type": "publisher", "id": 28180, "name": "Rubicon User Matching"}, {"content": "<script type=\"text/javascript\">\r\n(function () {\r\n_ml = window._ml || {};\r\n_ml.pub = '748';\r\n_ml.redirect = 'http://web.archive.org/web/20141023210838/http://beacon.krxd.net/usermatch.gif?partner=madisonlogic&partner_uid=[PersonID]';\r\nvar s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');\r\nmltag.type = 'text/javascript'; mltag.async = true;\r\nmltag.src = '//web.archive.org/web/20141023210838/http://ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();\r\ns.parentNode.insertBefore(mltag, s);\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 1, "timing": "asap", "type": "publisher", "id": 31684, "name": "Madison Logic User Match - CNN Only 1/24"}, {"content": "<script type=\"text/javascript\">\r\n// DFP premium.\r\n(function(require) {\r\n  var store = require('store');\r\n  var _ = require('util');  \r\n  var segments;\r\n  \r\n  function handleUserDataResponse(r) {\r\n    // Handle the response as usual.\r\n    segments.handleUserDataResponse(r);\r\n    \r\n    // Override localStorage.kxuser with a case-insensitive value for DFP premium.\r\n    // This will get read by the interchange direct snippet for Krux.user\r\n    // and Krux.dfpKeyValues\r\n    if(r.kuid_long) {\r\n      store.set('user', r.kuid_long, store.DAYS*30);\r\n    }\r\n  }\r\n  \r\n  // Our own fetch uses our own handleResponse\r\n  function fetch() {\r\n    var options = {\r\n      url: _.get('url_userData'),\r\n      data: {pubid: _.get('pubid')},\r\n      callback: 'kxjsonp_userData',\r\n      done: handleUserDataResponse\r\n    };\r\n    if(!segments.readTechFromStore()) {\r\n      options.data.technographics = 1;\r\n    }\r\n    require('http').jsonp(options);  \r\n  }\r\n  \r\n  \r\n  if(!store.get('segWait')) {\r\n    // disable segments.fetch and use our own\r\n    _.set('segWait', 1, store.MINUTES*5);\r\n    _.onOnce('dom:load', fetch);\r\n    _.fire('user_data_fetch_scheduled');\r\n  }\r\n  \r\n  // Finally, require segments as usual.\r\n  segments = require('segments');\r\n}(Krux.require));\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 2, "internal": 1, "content_type": "html", "timing": "asap", "type": "publisher", "id": 20614, "name": "Krux Load Segments"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "method": "document", "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "type": "library", "id": 28016, "name": "Krux Track Social"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 20466, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "id": 20467, "name": "Krux Geographic Data provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid && typeof kuid != 'undefined') {\r\n      var prefix = location.protocol == 'https:' ? \"https:\" :\"http:\";\r\n      var r_url = prefix + '//web.archive.org/web/20141023210838/http://cm.g.doubleclick.net/pixel'\r\n      var kurl = prefix + '//web.archive.org/web/20141023210838/http://apiservices.krxd.net/um?partner=google&r=' + r_url;\r\n      var i = new Image();\r\n      i.src = kurl;\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "publisher", "id": 30470, "name": "Google User Matching"}, {"content": "<script>\r\n// Using Globals currentVideoObj.franchiseName to produce page attribute currentVideoObj.franchiseName\r\nKrux('scrape', { \"page_attr_currentVideoObj.franchiseName\": {js_global: \"currentVideoObj.franchiseName\"}});\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "type": "publisher", "id": 28449, "name": "Data Transfer Code v2"}, {"content": "<img height=\"1\" width=\"1\" style=\"display:none;\" alt=\"\" src=\"//t.co/i/adsct?txn_id=l4urr&p_id=Twitter\" />", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "type": "publisher", "id": 34398, "name": "Twitter Pixel CNN (TMG) Lisa Ling"}, {"content": "<img height=\"1\" width=\"1\" style=\"display:none;\" alt=\"\" src=\"//t.co/i/adsct?txn_id=l4umf&p_id=Twitter\" />", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "type": "publisher", "id": 34399, "name": "Twitter Pixel CNN (TMG) Parts Unknown"}, {"content": "<img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=1588926451334235&amp;ev=NoScript\" />", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "type": "publisher", "id": 32379, "name": "Facebook Pixel CNN (TMG)"}, {"content": "<script type=\"text/javascript\" src=\"http://content.dl-rms.com/rms/mother/42023/nodetag.js\"></script>", "target": "", "end_date": "2014-12-31", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "load", "func": "function r() {\n    var n = \"\", p, x, u_alt, prot;\n    prot = location.protocol.indexOf(\"http\") === 0 ? location.protocol : \"http:\";\n    while (1) {\n        u_alt = prot == \"https:\" ? u.replace(\"https:\", \"http:\") : u.replace(\"http:\", \"https:\");\n        try {\n            for (p in pfs) {\n                if ((u.substring(0, p.length) == p ||\n                    u_alt.substring(0, p.length) == p) &&\n                    p.length > n.length) {\n                    if (pfs[p].ex) {\n                        x = new RegExp(pfs[p].ex, \"i\");\n                        if (x.test(u)) {\n                            continue;\n                        }\n                    }\n                    n = p;\n                }\n            }\n            if (n.length > 0) {\n                z(pfs[n]);\n                return;\n            }\n        } catch (e) {\n        }\n        if (w == top) {\n            break;\n        }\n        if (w == window && u != d.referrer) {\n            u = d.referrer;\n        } else {\n            w = w.parent;\n        }\n    }\n}"}]}, "tier": 1, "internal": false, "start_date": "2014-10-03", "content_type": "html", "criteria": [{"operator": "=", "name": "country", "value": "US"}], "timing": "onload", "type": "publisher", "id": 35453, "name": "Havas_GrandMarnier_SafecountStudyPixel"}, {"content": "<img height=\"1\" width=\"1\" style=\"border-style:none;\" alt=\"\" src=\"//googleads.g.doubleclick.net/pagead/viewthroughconversion/986255830/?value=0&amp;guid=ON&amp;script=0\"/>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "type": "publisher", "id": 32385, "name": "Google Remarketing CNN"}, {"content": "<script class=\"krux-dtc\">\r\n(function() {\r\n  window.Krux||((Krux=function(){Krux.q.push(arguments);}).q=[]);;\r\n  Krux.turnerDataTransfer = function() {\r\n    /*\r\n    Parse ad call\r\n    */\r\n\r\n    var attrs, el, els, find, i, key, keys, lookFor, m, match, ns, parts, pixel, site, size, sizes, _, _i, _len, _ref;\r\n    sizes = [\"728x90\", \"300x250\", \"336x280\", \"160x600\", \"336x850\", \"300x600\", \"custom_rgt\", \"970x66\"];\r\n    _ = Krux._;\r\n    find = Krux('require:sizzle').find;\r\n    el = null;\r\n    while (sizes.length && (el == null)) {\r\n      size = sizes.pop();\r\n      els = find(\"*[src*=_pos=\" + size + \"], *[src*=_position=\" + size + \"]\");\r\n      el = els[0];\r\n    }\r\n    if (el) {\r\n      m = el.src.match(/\\.ng\\/(site=.*)$/);\r\n      if (!m) {\r\n        return;\r\n      }\r\n      attrs = Krux('require:util').parseKeyValues(m[1]);\r\n      site = attrs.site;\r\n      if (!site) {\r\n        return;\r\n      }\r\n      Krux('set', \"page_attr_\" + site + \"_site\", site);\r\n      Krux('set', \"page_attr_\" + site + \"_pagetype\", attrs[\"\" + site + \"_pagetype\"]);\r\n      Krux('set', \"page_attr_\" + site + \"_rollup\", attrs[\"\" + site + \"_rollup\"]);\r\n      Krux('set', \"page_attr_\" + site + \"_pos\", attrs[\"\" + site + \"_pos\"]);\r\n      Krux('set', \"page_attr_\" + site + \"_position\", attrs[\"\" + site + \"_position\"]);\r\n      Krux('set', \"page_attr_\" + site + \"_section\", attrs[\"\" + site + \"_section\"]);\r\n      Krux('set', \"page_attr_\" + site + \"_subsection\", attrs[\"\" + site + \"_subsection\"]);\r\n      Krux('set', \"section\", attrs[\"\" + site + \"_rollup\"]);\r\n      Krux('set', \"subsection\", attrs[\"\" + site + \"_section\"]);\r\n    }\r\n    /*\r\n    Parse metrics pixel\r\n    */\r\n\r\n    ns = (function() {\r\n      var exceptions, jsmdmap, key1, key2, val1, val2, _ref;\r\n      if (window._jsmd_default) {\r\n        jsmdmap = _jsmd_default.map;\r\n        for (key1 in jsmdmap) {\r\n          val1 = jsmdmap[key1];\r\n          for (key2 in val1) {\r\n            val2 = val1[key2];\r\n            if (ns = val2 != null ? (_ref = val2.settings) != null ? _ref.visitorNamespace : void 0 : void 0) {\r\n              return ns;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      exceptions = {\r\n        'NBA': '0_nbagroup',\r\n        'Nascar': 'nascardigitalsap',\r\n        'Bleacher Report': 'turnersidigital',\r\n        'Teamcoco': '0_teamcoco'\r\n      };\r\n      return exceptions[Krux('get', 'site')];\r\n    })();\r\n    if (!ns) {\r\n      return;\r\n    }\r\n    lookFor = \"&h1=(.*?)&\";\r\n    i = 0;\r\n    pixel = window[\"s_i_1_\" + ns];\r\n    while (pixel && !(match = (_ref = pixel.src) != null ? _ref.match(lookFor) : void 0)) {\r\n      i++;\r\n      pixel = window[\"s_i_\" + ns + \"_\" + i];\r\n    }\r\n    if (match) {\r\n      parts = decodeURIComponent(match[1]).split('|');\r\n      keys = ['lob', 'brand', 'bizunit', 'sitename', 'sitesectionlevel1', 'sitesectionlevel2'];\r\n      for (i = _i = 0, _len = keys.length; _i < _len; i = ++_i) {\r\n        key = keys[i];\r\n        Krux('set', \"page_attr_\" + site + \"_\" + key, parts[i]);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  Krux.turnerDataTransfer();\r\n\r\n}).call(this);\r\n \r\n// Using Meta keywords to produce page attribute keywords\r\nKrux('scrape', { \"page_attr_keywords\": {meta_name: \"keywords\"}});\r\n// Using Cookie last5stocks to produce page attribute cookie_last5stocks\r\nKrux('scrape', { \"page_attr_cookie_last5stocks\": {cookie: \"last5stocks\"}});\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "type": "publisher", "id": 32209, "name": "DTC (CNN, CNN A, CNN P, NCAA, PGA, TBS, TCM, TNT)"}], "segments": [], "publisher": {"uuid": "e9eaedd3-c1da-4334-82f0-d7e3ff883c87", "id": 11621, "name": "Turner"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 13687, "name": "CNN"}, "prioritized_segments": ["oqvo8j78z", "ouqgr7oij", "op7zb9wst", "oxkbqlt7w", "oxkjze4mo", "oofjeme8d", "oxkcjzrc8", "ow02vxoxn", "oxkhq21md", "oxkkizowq", "oxkkwius6", "n5c46smdr", "n5dcxk9zb", "oor80jpam", "ow4wwcby5", "n5c09rzgz", "n5wn1ui77", "n5w0979by", "onrvw56e6", "ojpy27x0p", "onrvrj151", "omcyl176a", "ohlith9bw", "n6wmil4a3", "ow0u8jsko", "ow4vr99p4", "ojwwecir2", "n5dedrl9e", "oor00a4oq", "oo69w0dc2", "ok9lbcpn0", "ol425f1bx", "ojdcwdj3g", "ojpzrxlxg", "opfsqxmay", "orqod1wl4", "obi1ao2ri", "noaold8o2", "omcmpk6l4", "nodwjned9", "ol8huco5c", "ol8iinpau", "oj4y3xm7o", "n4817demz", "n5c8q8fb1", "n4805apw4", "ol8hjgv59", "n5c3w4duk", "n5dan1tu8", "n5c66y79u", "n5wsey11k", "obzgikk57", "n5c7t6dg4", "n7g8xd3gn", "n5xfud34k", "n5c8gwwbs", "oebdg789j", "okgplh5nx", "nu4l9ovvc", "n6lamk0rg", "ojs08vn88", "n5wqmenoa", "n58oam1zv", "onz8ml55o", "nzu2b1bfi", "oosa4jujr", "n5xd2axks", "oihw95wki", "ojdltp8ul", "ooogej5l0", "ndgr2etcz", "obmv7hptl", "omck0gx0c", "ol8yeu190", "nzywhgceh", "n58q590u8", "n0c7ap7lr", "ohtonitcp", "ohtoh2tr9", "n4pf1bml8", "opgalic5g", "nwsjaji63", "oumosjvfg", "oumuc886y", "oumuaorqi", "oumt5myjt", "oumty4ao5", "oumtvhell", "opvhgnrtm", "n49ko408n", "n5c5fca4g", "n5ddb1bpr", "opz04nnaj", "owxwwefli", "oqy1un0dw", "omwuc83rj", "owtk68gke", "n5cyf9l75", "ouu2vv9kt", "olh3w1che", "olh3iw8lt", "oo73gifm4", "oo3rbptjj", "op366l1kv", "olh2v6yvi", "oo3hu0arq", "olimj2zxi", "olh4wqb5p", "oxsyy463v", "oxs0vfa32", "oxs3r451h", "oxs36l7uz", "oxs4dbge1", "oxs4nxpti", "oxs4szrpj", "oxv4lul2h", "oxv4rmmx0", "oxv4tyldq", "oxv4wr11x", "ovqm6jls6", "oydrlwfzj", "oridvh5jd", "ox1lo70kn", "of13oevco", "oqvol9nts"], "dnt": null, "params": {"revenue_optimization": false, "control_tag_pixel_throttle": "100", "context_terms": "false", "jslog_host": "jslog.krxd.net", "capture_js_errors": "true", "control_tag_load_sync": "false", "remove_kxhead": true, "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "max_segments": "20", "client_side_storage": "localStorage,cookie", "control_tag_stats_prefix": null, "user_id_cookie": null, "no_pii": 0, "beacon_host": "beacon.krxd.net", "control_tag_namespace": null, "control_tag_version": "stable", "datatag_version": "3", "supertag_requires_approval": false}, "services": {"impression": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/ad_impression.gif", "stats": "//web.archive.org/web/20141023210838/http://apiservices.krxd.net/stats", "log": "//web.archive.org/web/20141023210838/http://jslog.krxd.net/jslog.gif", "userData": "//web.archive.org/web/20141023210838/http://apiservices.krxd.net/user_data/segments/3", "optout": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/optout_check", "pixel": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/pixel.gif", "um": "//web.archive.org/web/20141023210838/http://apiservices.krxd.net/um", "is_optout": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/optout_check", "set_optin": "//web.archive.org/web/20141023210838/http://apiservices.krxd.net/consumer/optin", "social": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/social.gif", "set_optout": "//web.archive.org/web/20141023210838/http://apiservices.krxd.net/consumer/optout", "data": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/data.gif", "event": "//web.archive.org/web/20141023210838/http://beacon.krxd.net/event.gif"}, "geo": {}, "realtime_segments": [{"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_cnn_site", "[\"cnn\"]"]], ["and", ["intersects", "$page_attr_cnn_rollup", "[\"health\"]"], ["intersects", "$page_attr_cnn_section", "[\"expert_qa\"]"]]]]], "id": "n0c7ap7lr"}, {"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_cnn_sitesectionlevel1", "[\"awards season\"]"]]]]], "id": "ohtoh2tr9"}, {"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_cnn_sitesectionlevel1", "[\"awards season\"]"]]]]], "id": "ohtonitcp"}], "confid": "ITb_4eqO"};

    // Wrap in a function and comment, then toString the func and replace
    // everything that's not the beginning or end of a JSON object, so we get a
    // string that's either empty or JSON.
    var esiGeo = String(function(){/*
      <esi:include src="/geoip_esi"/>
    */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

    if (esiGeo) {
      config.geo = esiGeo;
    }

    Krux('config', config);
    
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;
    
  loadCT( "//web.archive.org/web/20141023210838/http://cdn.krxd.net/ctjs/controltag.js.f99670595ccd46c65a517672ea749179", loadConfig );
})();


}
/*
     FILE ARCHIVED ON 21:08:38 Oct 23, 2014 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 22:42:45 Dec 13, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  exclusion.robots: 0.089
  exclusion.robots.policy: 0.081
  cdx.remote: 0.085
  esindex: 0.009
  LoadShardBlock: 312.82 (6)
  PetaboxLoader3.datanode: 182.484 (7)
  load_resource: 133.142
  PetaboxLoader3.resolve: 57.303
*/